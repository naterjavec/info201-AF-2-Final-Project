return(percent[percent$cm_name %like% food, ])
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = s_data$City,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'))
return(plot)
}
print(create_bar_chart("Rice"))
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ]
View(specific_data)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
View(specific_data)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change') %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change')))
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change'))
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change'))
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x= ~City,
y= ~food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(data = specific_data,
x= ~City,
y= ~food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(data = specific_data,
x= specific_data$City,
y= specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data$temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
View(specific_data)
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data$temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
specific_data <- data.frame(specific_data)
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data$temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change')))
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = s_data$City,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, Country, temp_change, Longitude, Latitude)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, Country, temp_change, Longitude, Latitude)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(price_change = mp_price - lag(mp_price, default = mp_price[1]),
city = adm1_name) %>%
mutate(food_percent = price_change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(city, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
#Data with percent changes for both food and temperature
percent <- merge(food_change, temp_w_percent, by = "city")
View(percent)
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = city,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = ~city,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x = specific_data$city,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x = specific_data[["City"]],
y = specific_data[["food_percent"]],
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data[["temp_change"]],
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data, x = ~city,y = ~food_percent, type = 'bar', name = 'Food Percent Change' %>%
add_trace(y = ~temp_change, name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
p <- plot_ly(specific_data, x = ~city,y = ~food_percent, type = 'bar', name = 'Food Percent Change' %>%
add_trace(y = ~temp_change, name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
#Wheat test
print(create_bar_chart("Oil"))
View(specific_data)
is.data.frame(specific_data)
plot_ly(data = specific_data,
x = ~city,
y = ~temp_change)
plot_ly(data = specific_data,
x = ~City,
y = ~temp_change)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(city, food_percent, temp_change)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, Country, temp_change, Longitude, Latitude)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, City, Country, temp_change, Longitude, Latitude)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(price_change = mp_price - lag(mp_price, default = mp_price[1]),
city = adm1_name) %>%
mutate(food_percent = price_change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(city, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
#Data with percent changes for both food and temperature
percent <- merge(food_change, temp_w_percent, by = "city")
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(city, food_percent, temp_change)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
plot_ly(data = specific_data,
x = ~City,
y = ~temp_change)
plot_ly(data = specific_data,
x = ~City,
y = ~temp_change,
type = 'bar')
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = ~city,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
#Download Libraries
library(dplyr)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
library(tidyr)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
View(piping_data)
plot_ly(piping_data,
x = ~City,
y = ~Value,
type = 'bar'
)
ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge")
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge")
ggplotly(p)
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
shiny::runApp()
runApp()
#Data with percent changes for both food and temperature
percent_change <- merge(food_change, temp_w_percent, by = "City")
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(y = "Percent Change")
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(y = "Percent Change")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"), y = "Percent Change")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"), y = "Percent Change") +
scale_fill_discrete(labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"), y = "Percent Change") +
scale_fill_discrete(name = "Legend", breaks = c("food_percent", "temp_change"), labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("food_percent", "temp_change"),
labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(hange = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
View(food_change)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1])) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(City, Country, temp_change, Longitude, Latitude)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(hange = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(change = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
runApp()
runApp()
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(change = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, price_change, mp_month, mp_year)
View(food_change)
return(ggplotly(p))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("price_change", "temp_change"),
labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("price_change", "temp_change"),
labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(change = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, price_change, mp_month, mp_year)
View(food_change)
#Data with percent changes for both food and temperature
percent_change <- merge(food_change, temp_w_percent, by = "City")
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("price_change", "temp_change"),
labels = c("Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
runApp()
runApp()
