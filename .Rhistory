
return(percent[percent$cm_name %like% food, ])

it limits industry, and by extension, the many
affected by industry growth. However, these same
people could suffer effects far outweighing those
of industry limitation in the near future, yet
the legitimacy of these effects is still struggling
to be recognized in legislation.")
)
page_two <- tabPanel(

"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_two <- tabPanel(
"Problem Situation",
sidebarLayout(
sidebarPanel(
#                selectInput("pg2_food", "Choose a Food:",
#                            choices = "Oil", "Rice", "Wheat", "Sugar",
#                           "Lentils", "Maize")
),
mainPanel(
p("If the scope of climate change extends to food prices,
then many countries will find themselves at an extreme
disadvantage in the global market, and citizens of
those countries that depend on their natural resources
for food could go hungry, heavily increasing the need
for a solution to world hunger. While it is already
prevalent in the United States that a discrepancy
exists between reasonably priced food and its quality,
this change would create yet another opportunity for
companies to wedge a gap between the upper class and
the middle and lower class, creating more divide than
our nation already faces."),
# plotOutput(create_bar_chart())
)
)
page_three <- tabPanel(
"Data Critique",
sidebarLayout(
sidebarPanel(
#Strengths and weaknesses from project proposal
),
mainPanel(
p("A strength is that both data sets are
comprehensive,
with very little missing values.
The columns they do have are very consistent
in their values.A weakness is that
cities are the only locations
considered, showcasing the impact
of this global phenomenon for only
a certain group of people. The
cities included in
these data sets also must
overlap, otherwise no trend between
temperature and price can be
made. In addition, climate change is a
slow process, and our specific
data set for food prices spans
many locations but
only dates about a decade back.")
)
)
page_three <- tabPanel(
"Data Critique",
sidebarLayout(
sidebarPanel(
#Strengths and weaknesses from project proposal
),
mainPanel(
p("A strength is that both data sets are
comprehensive,
with very little missing values.
The columns they do have are very consistent
in their values.A weakness is that
cities are the only locations
considered, showcasing the impact
of this global phenomenon for only
a certain group of people. The
cities included in
these data sets also must
overlap, otherwise no trend between
temperature and price can be
made. In addition, climate change is a
slow process, and our specific
data set for food prices spans
many locations but
only dates about a decade back.")
)
)
ui <- navbarPage(
"The Effect of Climate Change on Food Prices",
page_one,
page_two,
page_three,
page_four,
page_five
)
page_five <- tabPanel(
"About",
sidebarLayout(
sidebarPanel(
h3("Working Through the Data"),
p("While working on this project, each group
member was responsible for different parts
of the report. They are as follows:"),
p("Natalie:"),
p("Sierra: I worked on creating the page format
and in-page formatting, connecting the
server to the user interface, and inputting
visualizations into the ui."),
p("Ethan:"),
p("Tyler:"),
h3("Data Sets:"),
h5(uiOutput("tab")),
h5(uiOutput("tab2"))
),
mainPanel(
p("In the project, we found ourselves wanting to
compare many different types of crops in order
to get a better picture of the effects of
climate change, however, were unable to do
so because of time constraints. In addition,
comparing different times of the year, as
opposed to solely June 1st of each year, would
have also provided us with more credibility.
At the same time, we believe that our
consistency among variables such as time
of year and crop are what makes the project
reliable and appeals to the ease of
readability for the user. From this,
we learned how to apply Shiny to real-world
scenarios and get results. From here, one
may want to pursue using a different data
set for food prices that goes back further
in time and provide more cities in Europe
and North America in order to see a more
accurate trend.")
shiny::runApp()
ui <- navbarPage(
"The Effect of Climate Change on Food Prices",
page_one,
page_two,
page_three,
page_four,
page_five
)
page_one <- tabPanel(
"Introduction",
titlePanel("Introduction"),
sidebarLayout(
sidebarPanel(
h4("Who Cares"),
p("The stakeholders within this situation are the people
who food prices are relevant to - those who have their
quality of life or even survival fluctuate with food
prices. The opposite stakeholders would be industries
that affect those prices. Their values and quality of
life over profitability may be in direct contrast with
each other. It is the policymakers’ task to determine
whether limiting industries or risking people’s livelihood
are the beneficial choices for their constituency.")),
mainPanel(
h3("Ask Yourself..."),
h4("Is the price of food in major cities affected
by global temperatures?"),
h4("Will climate change be a factor in raising food prices?"),
h3("The Issue"),
p("There are varying levels of doubt about
the effects or even existence of climate
change. A typical counterpoint against
climate change legislation is the fact that
it limits industry, and by extension, the many
affected by industry growth. However, these same
people could suffer effects far outweighing those
of industry limitation in the near future, yet
the legitimacy of these effects is still struggling
to be recognized in legislation.")
shinyApp(ui = ui, server = server)
runApp()
runApp()
ui <- navbarPage(
"The Effect of Climate Change on Food Prices",
page_one,
page_two,
page_three,
page_four,
page_five
)
runApp()
runApp()
runApp()
setwd("~/Desktop/info201-AF-2-Final-Project/server.R")
runApp()
page_one <- tabPanel(
"Introduction",
titlePanel("Introduction"),
sidebarLayout(
sidebarPanel(
h4("Who Cares"),
p("The stakeholders within this situation are the people
who food prices are relevant to - those who have their
quality of life or even survival fluctuate with food
prices. The opposite stakeholders would be industries
that affect those prices. Their values and quality of
life over profitability may be in direct contrast with
each other. It is the policymakers’ task to determine
whether limiting industries or risking people’s livelihood
are the beneficial choices for their constituency.")
),
mainPanel(
h3("Ask Yourself..."),
h4("Is the price of food in major cities affected
by global temperatures?"),
h4("Will climate change be a factor in raising food prices?"),
h3("The Issue"),
p("There are varying levels of doubt about
the effects or even existence of climate
change. A typical counterpoint against
climate change legislation is the fact that
it limits industry, and by extension, the many
affected by industry growth. However, these same
people could suffer effects far outweighing those
of industry limitation in the near future, yet
the legitimacy of these effects is still struggling
to be recognized in legislation.")
server <- function(input, output) {
#  output$cityPlot <- renderPlot({
#     data_and_plot(city_temp_data(input$City), city_food_data(input$cm_name))
#  })
temp_url <- a("here", href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data")
output$tab <- renderUI({
tagList("To learn more about global temperatures, click", url)
})
food_url <- a("here", href="https://www.kaggle.com/jboysen/global-food-prices")
output$tab2 <- renderUI({
tagList("To learn more about food prices, click", url)
})

}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = s_data$City,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'))
return(plot)
}
print(create_bar_chart("Rice"))
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ]
View(specific_data)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
View(specific_data)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change') %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change')))
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change'))
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change'))
p <- plot_ly(specific_data,
x= ~City,
y= ~ food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x= ~City,
y= ~food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(data = specific_data,
x= ~City,
y= ~food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(data = specific_data,
x= specific_data$City,
y= specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data$temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
View(specific_data)
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data$temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
specific_data <- data.frame(specific_data)
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data$temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change')))
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = s_data$City,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, Country, temp_change, Longitude, Latitude)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, Country, temp_change, Longitude, Latitude)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(price_change = mp_price - lag(mp_price, default = mp_price[1]),
city = adm1_name) %>%
mutate(food_percent = price_change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(city, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
#Data with percent changes for both food and temperature
percent <- merge(food_change, temp_w_percent, by = "city")
View(percent)
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = city,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = ~city,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
p <- plot_ly(specific_data,
x = specific_data$City,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x = specific_data$city,
y = specific_data$food_percent,
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = ~temp_change,
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data,
x = specific_data[["City"]],
y = specific_data[["food_percent"]],
type = 'bar',
name = 'Food Percent Change' %>%
add_trace(y = specific_data[["temp_change"]],
name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
p <- plot_ly(specific_data, x = ~city,y = ~food_percent, type = 'bar', name = 'Food Percent Change' %>%
add_trace(y = ~temp_change, name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
p <- plot_ly(specific_data, x = ~city,y = ~food_percent, type = 'bar', name = 'Food Percent Change' %>%
add_trace(y = ~temp_change, name = 'Temperature Percent Change') %>%
layout(yaxis = list(title = 'Percent Change'), barmode = 'group'))
#Wheat test
print(create_bar_chart("Oil"))
View(specific_data)
is.data.frame(specific_data)
plot_ly(data = specific_data,
x = ~city,
y = ~temp_change)
plot_ly(data = specific_data,
x = ~City,
y = ~temp_change)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(city, food_percent, temp_change)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, Country, temp_change, Longitude, Latitude)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1]),
city = City) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(city, City, Country, temp_change, Longitude, Latitude)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(price_change = mp_price - lag(mp_price, default = mp_price[1]),
city = adm1_name) %>%
mutate(food_percent = price_change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(city, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
#Data with percent changes for both food and temperature
percent <- merge(food_change, temp_w_percent, by = "city")
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(city, food_percent, temp_change)
specific_data <- percent_change[percent_change$cm_name %like% "Rice", ] %>%
select(City, food_percent, temp_change)
plot_ly(data = specific_data,
x = ~City,
y = ~temp_change)
plot_ly(data = specific_data,
x = ~City,
y = ~temp_change,
type = 'bar')
create_bar_chart <- function(food){
s_data <- food_percent_data(food)
plot <- plot_ly(s_data,
x = ~city,
y = ~temp_change,
type = 'bar',
name = 'Temp Percent Chnage') %>%
add_trace(y = ~food_percent,
name = 'Food Price Percent Change') %>%
layout(yaxis = list(title = 'Percent'), barmode = 'group')
return(plot)
}
print(create_bar_chart("Rice"))
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
#Download Libraries
library(dplyr)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
library(tidyr)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
View(piping_data)
plot_ly(piping_data,
x = ~City,
y = ~Value,
type = 'bar'
)
ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge")
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge")
ggplotly(p)
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
shiny::runApp()
runApp()
#Data with percent changes for both food and temperature
percent_change <- merge(food_change, temp_w_percent, by = "City")
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(y = "Percent Change")
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(y = "Percent Change")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"), y = "Percent Change")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"), y = "Percent Change") +
scale_fill_discrete(labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"), y = "Percent Change") +
scale_fill_discrete(name = "Legend", breaks = c("food_percent", "temp_change"), labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, food_percent, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("food_percent", "temp_change"),
labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(hange = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
View(food_change)
temp_w_percent <- global_temp %>%
mutate(month = substring(dt, 6, 7),
year = as.numeric(substring(dt, 1, 4))) %>%
filter(month == "09") %>%
group_by(City) %>%
filter(year == 2006 | year == 2012) %>%
mutate(change = AverageTemperature - lag(AverageTemperature, default = AverageTemperature[1])) %>%
mutate(temp_change = change / lag(AverageTemperature, default = AverageTemperature[1]) * 100) %>%
filter(temp_change != 0) %>%
select(City, Country, temp_change, Longitude, Latitude)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(hange = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(change = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, food_percent, mp_month, mp_year)
runApp()
runApp()
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(change = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, price_change, mp_month, mp_year)
View(food_change)
return(ggplotly(p))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("price_change", "temp_change"),
labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("price_change", "temp_change"),
labels = c("Food Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
food_change<- food_prices %>%
filter(mp_month == 9) %>%
group_by(adm1_name, cm_name) %>%
filter(mp_year == 2006 | mp_year == 2014) %>%
mutate(change = mp_price - lag(mp_price, default = mp_price[1]),
City = adm1_name) %>%
mutate(price_change = change / lag(mp_price, default = mp_price[1]) * 100) %>%
filter(price_change != 0) %>%
select(City, adm0_name, adm1_name, cm_name, price_change, mp_month, mp_year)
View(food_change)
#Data with percent changes for both food and temperature
percent_change <- merge(food_change, temp_w_percent, by = "City")
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend")
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
create_bar_chart <- function(food){
specific_data <- percent_change[percent_change$cm_name %like% food, ] %>%
select(City, price_change, temp_change)
piping_data <- specific_data %>%
gather("Stat", "Value", -City)
p <- ggplot(piping_data, aes(x = City, y = Value, fill = Stat)) +
geom_col(position = "dodge") +
labs(title = paste(food, "Prices as Compared to Climate Change"),
y = "Percent Change") +
scale_fill_discrete(name = "Legend",
breaks = c("price_change", "temp_change"),
labels = c("Price", "Temperature"))
return(ggplotly(p))
}
print(create_bar_chart("Rice"))
runApp()
runApp()
shiny::runApp()
install.packages("shinythemes")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
